{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/ApiService.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/ProcessPanel.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/private-route/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Component","create","baseURL","Landing","products","_this2","this","api","get","params","then","res","console","log","data","setState","react_default","a","createElement","className","map","item","index","key","style","border","margin","padding","src","image","width","height","name","price","location","date","ProcessPanel","onSubmit","e","preventDefault","post","_this","result","alert","onChange","event","nam","target","val","value","defineProperty","placeholder","required","Register","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","id","newUser","email","password","password2","props","registerUser","history","push","nextProps","Link","to","paddingLeft","noValidate","error","classnames","invalid","htmlFor","borderRadius","letterSpacing","marginTop","Login","connect","userData","dispatch","catch","err","response","withRouter","loginUser","emailnotfound","passwordincorrect","localStorage","setItem","jwt_decode","Dashboard","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","onLogoutClick","logoutUser","split","fontFamily","onClick","App","removeItem","es","BrowserRouter","exact","path","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35af49db.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import axios from 'axios';\r\n\r\nexport const BASE_URL = 'http://localhost:5555'\r\n//export const BASE_URL = 'http://69.36.182.72:5555'\r\n\r\n\r\nexport default axios.create({\r\n    baseURL : \"http://localhost:5555/api\"\r\n//    baseURL : 'http://69.36.182.72:5555/api'\r\n\r\n})","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <i className=\"material-icons\"></i>\n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\nimport api from '../ApiService.js'\n\nclass Landing extends Component {\n  state={\n    products:[]\n  }\n  componentDidMount(){\n    api.get('/facebooks/get',{\n      params:{\n        token:\"3vjelxmei@jdifeialkjcia34asldf0-3kjlsdkj92l-aod=2g6+39kzcvhgrg9jdh3idjsl2\"\n      }\n    })\n    .then(res=>{\n      console.log(res.data)\n      this.setState({\n        products:res.data.products\n      })\n    })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n            \n            {\n              //https://scontent-arn2-1.xx.fbcdn.net/v/t1.0-9/p720x720/126850870_2743224212596781_7796334578218705964_o.jpg?_nc_cat=102&ccb=2&_nc_sid=843cd7&_nc_ohc=Skg4It8Gz7MAX-31-5K&_nc_ht=scontent-arn2-1.xx&tp=6&oh=d16085c07110457f47a7ac7f0c1eb9bb&oe=5FE3CE13\n              this.state.products.map((item,index)=>{\n                return(\n                  <div className=\"col md-3\" key={index}  style={{border:'1px solid blue',margin:'10px',padding:'10px'}}>\n                    <img src={item.image} style={{width:'300px',height:'300px'}}></img>\n                    <div>name:{item.name}</div>\n                    <div>price:{item.price}</div>\n                    <div>location:{item.location}</div>\n                    <div>date:{item.date}</div>\n\n                  </div>\n                )\n              })\n            }\n\n            {/* <h4>\n              <span style={{ fontFamily: \"monospace\" }}>White</span> panda\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Assignment\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div> */}\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\r\nimport axios from 'axios'\r\nimport api from '../ApiService.js'\r\n\r\nclass ProcessPanel extends Component {\r\n    onSubmit = (e)=>{\r\n        e.preventDefault()\r\n        api.post('/facebooks/post',{\r\n            params:{\r\n                ...this.state\r\n            }\r\n        }).then(res=>{\r\n            console.log(res.data)\r\n            if(res.data.result == true)\r\n            {\r\n                alert(\"success\")\r\n            }\r\n            this.setState({})\r\n        })\r\n    }\r\n    onChange = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({[nam]: val},()=>{\r\n            console.log(this.state)\r\n        });\r\n\r\n      }\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" name=\"name\" onChange={this.onChange} placeholder=\"name\" required/>\r\n                    <input type=\"text\" name=\"image\" onChange={this.onChange}  placeholder=\"imageurl\" required/>\r\n                    <input type=\"text\" name=\"location\" onChange={this.onChange}  placeholder=\"location\" required/>\r\n                    <input type=\"number\" name=\"price\" onChange={this.onChange}  placeholder=\"price\" required/>\r\n                    <input type=\"date\" name=\"date\" onChange={this.onChange}  placeholder=\"publishdate\" required/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProcessPanel","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login With OTPs\n                </button>\n                \n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a full-stack{\" \"}\n                <span style={{ fontFamily: \"monospace\" }}>whitepanda</span> Assignment  👏\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport ProcessPanel from \"./components/layout/ProcessPanel\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/processpanel\" component={ProcessPanel} />\n      \n            <Route exact path=\"/\" component={Landing} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}